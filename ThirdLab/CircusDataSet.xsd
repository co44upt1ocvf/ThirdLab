<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CircusDataSet" targetNamespace="http://tempuri.org/CircusDataSet.xsd" xmlns:mstns="http://tempuri.org/CircusDataSet.xsd" xmlns="http://tempuri.org/CircusDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CircusConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CircusConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ThirdLab.Properties.Settings.GlobalReference.Default.CircusConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Circus_EventsTableAdapter" GeneratorDataComponentClassName="Circus_EventsTableAdapter" Name="Circus_Events" UserDataComponentName="Circus_EventsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CircusConnectionString (Settings)" DbObjectName="Circus.dbo.Circus_Events" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Circus_Events] WHERE (([Event_ID] = @Original_Event_ID) AND ([Title] = @Original_Title) AND ([Event_Date] = @Original_Event_Date) AND ([Price] = @Original_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Event_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Event_Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Circus_Events] ([Title], [Event_Date], [Price]) VALUES (@Title, @Event_Date, @Price);
SELECT Event_ID, Title, Event_Date, Price FROM Circus_Events WHERE (Event_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Event_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Event_Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Event_ID, Title, Event_Date, Price FROM dbo.Circus_Events</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Circus_Events] SET [Title] = @Title, [Event_Date] = @Event_Date, [Price] = @Price WHERE (([Event_ID] = @Original_Event_ID) AND ([Title] = @Original_Title) AND ([Event_Date] = @Original_Event_Date) AND ([Price] = @Original_Price));
SELECT Event_ID, Title, Event_Date, Price FROM Circus_Events WHERE (Event_ID = @Event_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Event_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Event_Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Event_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Event_Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Event_ID" ColumnName="Event_ID" DataSourceName="Circus.dbo.Circus_Events" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Event_ID" DataSetColumn="Event_ID" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="Event_Date" DataSetColumn="Event_Date" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomersTableAdapter" GeneratorDataComponentClassName="CustomersTableAdapter" Name="Customers" UserDataComponentName="CustomersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CircusConnectionString (Settings)" DbObjectName="Circus.dbo.Customers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Customers] WHERE (([Customer_ID] = @Original_Customer_ID) AND ([Firstname] = @Original_Firstname) AND ([Surnamre] = @Original_Surnamre) AND ([Email] = @Original_Email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Surnamre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Customers] ([Firstname], [Surnamre], [Email]) VALUES (@Firstname, @Surnamre, @Email);
SELECT Customer_ID, Firstname, Surnamre, Email FROM Customers WHERE (Customer_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Surnamre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Customer_ID, Firstname, Surnamre, Email FROM dbo.Customers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Customers] SET [Firstname] = @Firstname, [Surnamre] = @Surnamre, [Email] = @Email WHERE (([Customer_ID] = @Original_Customer_ID) AND ([Firstname] = @Original_Firstname) AND ([Surnamre] = @Original_Surnamre) AND ([Email] = @Original_Email));
SELECT Customer_ID, Firstname, Surnamre, Email FROM Customers WHERE (Customer_ID = @Customer_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Surnamre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Surnamre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Customer_ID" ColumnName="Customer_ID" DataSourceName="Circus.dbo.Customers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Customer_ID" DataSetColumn="Customer_ID" />
              <Mapping SourceColumn="Firstname" DataSetColumn="Firstname" />
              <Mapping SourceColumn="Surnamre" DataSetColumn="Surnamre" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TicketsTableAdapter" GeneratorDataComponentClassName="TicketsTableAdapter" Name="Tickets" UserDataComponentName="TicketsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CircusConnectionString (Settings)" DbObjectName="Circus.dbo.Tickets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tickets] WHERE (([Ticket_ID] = @Original_Ticket_ID) AND ((@IsNull_Event_ID = 1 AND [Event_ID] IS NULL) OR ([Event_ID] = @Original_Event_ID)) AND ((@IsNull_Customer_ID = 1 AND [Customer_ID] IS NULL) OR ([Customer_ID] = @Original_Customer_ID)) AND ([Quantity] = @Original_Quantity))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tickets] ([Event_ID], [Customer_ID], [Quantity]) VALUES (@Event_ID, @Customer_ID, @Quantity);
SELECT Ticket_ID, Event_ID, Customer_ID, Quantity FROM Tickets WHERE (Ticket_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Ticket_ID, Event_ID, Customer_ID, Quantity FROM dbo.Tickets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tickets] SET [Event_ID] = @Event_ID, [Customer_ID] = @Customer_ID, [Quantity] = @Quantity WHERE (([Ticket_ID] = @Original_Ticket_ID) AND ((@IsNull_Event_ID = 1 AND [Event_ID] IS NULL) OR ([Event_ID] = @Original_Event_ID)) AND ((@IsNull_Customer_ID = 1 AND [Customer_ID] IS NULL) OR ([Customer_ID] = @Original_Customer_ID)) AND ([Quantity] = @Original_Quantity));
SELECT Ticket_ID, Event_ID, Customer_ID, Quantity FROM Tickets WHERE (Ticket_ID = @Ticket_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Ticket_ID" ColumnName="Ticket_ID" DataSourceName="Circus.dbo.Tickets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Ticket_ID" DataSetColumn="Ticket_ID" />
              <Mapping SourceColumn="Event_ID" DataSetColumn="Event_ID" />
              <Mapping SourceColumn="Customer_ID" DataSetColumn="Customer_ID" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CircusDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="CircusDataSet" msprop:Generator_DataSetName="CircusDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Circus_Events" msprop:Generator_RowEvHandlerName="Circus_EventsRowChangeEventHandler" msprop:Generator_RowDeletedName="Circus_EventsRowDeleted" msprop:Generator_RowDeletingName="Circus_EventsRowDeleting" msprop:Generator_RowEvArgName="Circus_EventsRowChangeEvent" msprop:Generator_TablePropName="Circus_Events" msprop:Generator_RowChangedName="Circus_EventsRowChanged" msprop:Generator_RowChangingName="Circus_EventsRowChanging" msprop:Generator_TableClassName="Circus_EventsDataTable" msprop:Generator_RowClassName="Circus_EventsRow" msprop:Generator_TableVarName="tableCircus_Events" msprop:Generator_UserTableName="Circus_Events">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Event_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Event_ID" msprop:Generator_ColumnPropNameInTable="Event_IDColumn" msprop:Generator_ColumnVarNameInTable="columnEvent_ID" msprop:Generator_UserColumnName="Event_ID" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Event_Date" msprop:Generator_ColumnPropNameInRow="Event_Date" msprop:Generator_ColumnPropNameInTable="Event_DateColumn" msprop:Generator_ColumnVarNameInTable="columnEvent_Date" msprop:Generator_UserColumnName="Event_Date" type="xs:dateTime" />
              <xs:element name="Price" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_UserColumnName="Price" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Customers" msprop:Generator_RowEvHandlerName="CustomersRowChangeEventHandler" msprop:Generator_RowDeletedName="CustomersRowDeleted" msprop:Generator_RowDeletingName="CustomersRowDeleting" msprop:Generator_RowEvArgName="CustomersRowChangeEvent" msprop:Generator_TablePropName="Customers" msprop:Generator_RowChangedName="CustomersRowChanged" msprop:Generator_RowChangingName="CustomersRowChanging" msprop:Generator_TableClassName="CustomersDataTable" msprop:Generator_RowClassName="CustomersRow" msprop:Generator_TableVarName="tableCustomers" msprop:Generator_UserTableName="Customers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Customer_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Customer_ID" msprop:Generator_ColumnPropNameInTable="Customer_IDColumn" msprop:Generator_ColumnVarNameInTable="columnCustomer_ID" msprop:Generator_UserColumnName="Customer_ID" type="xs:int" />
              <xs:element name="Firstname" msprop:Generator_ColumnPropNameInRow="Firstname" msprop:Generator_ColumnPropNameInTable="FirstnameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstname" msprop:Generator_UserColumnName="Firstname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Surnamre" msprop:Generator_ColumnPropNameInRow="Surnamre" msprop:Generator_ColumnPropNameInTable="SurnamreColumn" msprop:Generator_ColumnVarNameInTable="columnSurnamre" msprop:Generator_UserColumnName="Surnamre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_UserColumnName="Email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tickets" msprop:Generator_RowEvHandlerName="TicketsRowChangeEventHandler" msprop:Generator_RowDeletedName="TicketsRowDeleted" msprop:Generator_RowDeletingName="TicketsRowDeleting" msprop:Generator_RowEvArgName="TicketsRowChangeEvent" msprop:Generator_TablePropName="Tickets" msprop:Generator_RowChangedName="TicketsRowChanged" msprop:Generator_RowChangingName="TicketsRowChanging" msprop:Generator_TableClassName="TicketsDataTable" msprop:Generator_RowClassName="TicketsRow" msprop:Generator_TableVarName="tableTickets" msprop:Generator_UserTableName="Tickets">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Ticket_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Ticket_ID" msprop:Generator_ColumnPropNameInTable="Ticket_IDColumn" msprop:Generator_ColumnVarNameInTable="columnTicket_ID" msprop:Generator_UserColumnName="Ticket_ID" type="xs:int" />
              <xs:element name="Event_ID" msprop:Generator_ColumnPropNameInRow="Event_ID" msprop:Generator_ColumnPropNameInTable="Event_IDColumn" msprop:Generator_ColumnVarNameInTable="columnEvent_ID" msprop:Generator_UserColumnName="Event_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Customer_ID" msprop:Generator_ColumnPropNameInRow="Customer_ID" msprop:Generator_ColumnPropNameInTable="Customer_IDColumn" msprop:Generator_ColumnVarNameInTable="columnCustomer_ID" msprop:Generator_UserColumnName="Customer_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Quantity" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_ColumnVarNameInTable="columnQuantity" msprop:Generator_UserColumnName="Quantity" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Circus_Events" />
      <xs:field xpath="mstns:Event_ID" />
    </xs:unique>
    <xs:unique name="Customers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Customers" />
      <xs:field xpath="mstns:Customer_ID" />
    </xs:unique>
    <xs:unique name="Tickets_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tickets" />
      <xs:field xpath="mstns:Ticket_ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Tickets__Custome__3C69FB99" msdata:parent="Customers" msdata:child="Tickets" msdata:parentkey="Customer_ID" msdata:childkey="Customer_ID" msprop:Generator_UserParentTable="Customers" msprop:Generator_UserChildTable="Tickets" msprop:Generator_RelationVarName="relationFK__Tickets__Custome__3C69FB99" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_ParentPropName="CustomersRow" msprop:Generator_UserRelationName="FK__Tickets__Custome__3C69FB99" />
      <msdata:Relationship name="FK__Tickets__Event_I__3B75D760" msdata:parent="Circus_Events" msdata:child="Tickets" msdata:parentkey="Event_ID" msdata:childkey="Event_ID" msprop:Generator_UserParentTable="Circus_Events" msprop:Generator_UserChildTable="Tickets" msprop:Generator_RelationVarName="relationFK__Tickets__Event_I__3B75D760" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_ParentPropName="Circus_EventsRow" msprop:Generator_UserRelationName="FK__Tickets__Event_I__3B75D760" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>